package org.firebears.subsystems;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.networktables.NetworkTable;
import org.firebears.Robot;
/**
 *
 */
public class Vision extends Subsystem {
    public NetworkTable networkTable = null;
    public static final String AUTONOMOUS = "autonomous";
    public static final String TELEOPERATED = "teleoperated";
    public static final String CONNECTED = "connected";
    public static final String LIVE_GOAL = "live goal";
    public static final String COORDSX = "coords of center (x)";
    public static final String COORDSY = "coords of center (y)";
    public static final String RADIUS = "radius";
    public static final String LEFT = "left";
    public static final String RIGHT = "right";
    public Vision() {
        networkTable = NetworkTable.getTable("vision");
        networkTable.putBoolean(LEFT, false);
        networkTable.putBoolean(RIGHT, false);
        networkTable.putBoolean(AUTONOMOUS, false);
        networkTable.putBoolean(TELEOPERATED, false);
        networkTable.putBoolean(LIVE_GOAL, false);
    }
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public void initDefaultCommand() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    }
    public double getCoordsx(){
       return Robot.vision.networkTable.getNumber(Vision.COORDSX);
    }
    public double getCoordsy(){
        return Robot.vision.networkTable.getNumber(Vision.COORDSY);
    }
    public double getRadius(){
        return Robot.vision.networkTable.getNumber(Vision.RADIUS);
    }
    public boolean getLivegoal(){
        return Robot.vision.networkTable.getBoolean(Vision.LIVE_GOAL);
    }
    public boolean getAuto(){
        return Robot.vision.networkTable.getBoolean(Vision.AUTONOMOUS);
    }
    public boolean getTele(){
        return Robot.vision.networkTable.getBoolean(Vision.TELEOPERATED);
    }
    public boolean getLeft(){
        return Robot.vision.networkTable.getBoolean(Vision.LEFT);
    }
    public boolean getRight(){
        return Robot.vision.networkTable.getBoolean(Vision.RIGHT);
    }

}
